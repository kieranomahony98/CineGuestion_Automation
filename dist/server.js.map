{"version":3,"sources":["../server.js"],"names":["dotenv","config","app","use","express","json","urlencoded","extended","listen","process","env","PORT","logger","info","mongoose","connect","MONGO_URI","useNewUrlParser","useUnifiedTopology","then","err","error","get","req","res","send","playlistApi"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACAA,mBAAOC,MAAP;;AACA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,yBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEAL,GAAG,CAACM,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B,YAAM;AAC/BC,iBAAOC,IAAP,oCAAwCJ,OAAO,CAACC,GAAR,CAAYC,IAApD;AACH,CAFD,E,CAGA;;AACAG,qBAASC,OAAT,CAAiBN,OAAO,CAACC,GAAR,CAAYM,SAA7B,EAAwC;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAxC,EACKC,IADL,CACU,YAAM;AACRP,iBAAOC,IAAP,CAAY,iCAAZ;AACH,CAHL,WAGa,UAACO,GAAD,EAAS;AACdR,iBAAOS,KAAP,CAAaD,GAAb;AACH,CALL;;AAOAlB,GAAG,CAACoB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,uBAAT;AACH,CAFD;AAIAvB,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBuB,uBAAzB","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport { logger } from './helpers/logger';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport config from 'config';\nimport \"regenerator-runtime/runtime.js\";\nimport playlistApi from './routes/api/playlistApi';\nimport dotenv from 'dotenv';\ndotenv.config();\nconst app = express();\n\napp.use(cors());\napp.use(helmet());\napp.use(express.json());\n\napp.use(express.urlencoded({ extended: false }));\n\napp.listen(process.env.PORT, () => {\n    logger.info(`app is listening to port ${process.env.PORT}`);\n});\n// connect to db\nmongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })\n    .then(() => {\n        logger.info('Mongoose successfully connected');\n    }).catch((err) => {\n        logger.error(err);\n    });\n\napp.get('/', (req, res) => {\n    res.send('Welcome to babel node');\n});\n\napp.use('/api/playlist', playlistApi);\n\n"],"file":"server.js"}